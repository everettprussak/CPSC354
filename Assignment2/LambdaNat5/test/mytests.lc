//List Tests
hd one:two ;; //Result = one (Same as you)
hd one ;; //Result = one
hd one:# ;; //Result = one
hd one:two:# ;; //Result = one (Same as you)
hd (one:two):# ;; //Result = one:two (Same as you)
hd (one:two) ;; //Result = one
hd (one):(two) ;; //Result = one
hd (one:two:#) ;; //Result = one
hd (one:two:#):# ;; //Result = one:two:# (Same as you)
(hd one:two:#):# ;; //Result = one:# (Same as you)
hd (\x. x)a : b : c ;; //Result = a
a:b:(c:(d:e)) ;; //Result = a:b:c:d:e
tl Plus:(N1:#):(Times:(N2:#):(N3:#):#):# ;; // Result = (N1:#):(Times:(N2:#):(N3:#):#):#
tl (tl Plus:N1:(Times:N2:N3)) ;; //Result = Times:N2:N3


tl a:# ;;
//les_equal tests

3 less_equal 4 ;; // Result = 1 (3 is indeed less than 4)
5 less_equal 1 ;; // Result = 0 (5 is not less than or equal to 1)
((\a. a) 2) less_equal ((\c. c) 5) ;; // (Evaluates to 2 less_equal 5, then result = 1)
(if 3+2 = 5 then 12 else 3) less_equal 9 ;; // (Evaluates to 12 less_equal 9, then result = 0)
